name: CI/CD - Credit Card Fraud ML

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Authenticate to GCP
      - name: Set up GCP credentials
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      # 3Ô∏è‚É£ Configure Docker for Artifact Registry
      - name: Configure Docker
        run: gcloud auth configure-docker us-central1-docker.pkg.dev

      # 4Ô∏è‚É£ Build Docker image
      - name: Build Docker image
        run: |
          IMAGE="us-central1-docker.pkg.dev/durable-unity-468703-a2/my-repo/demo_log:${GITHUB_SHA}"
          docker build --build-arg MODEL_FILE=model_clean.joblib -t $IMAGE .
          echo "IMAGE=$IMAGE" >> $GITHUB_ENV

      # 5Ô∏è‚É£ Push Docker image
      - name: Push Docker image
        run: docker push $IMAGE

      # 6Ô∏è‚É£ Get GKE credentials
      - name: Get GKE credentials
        uses: google-github-actions/get-gke-credentials@v1
        with:
          cluster_name: demo-log-ml-cluster-1
          location: us-central1-a
          project_id: durable-unity-468703-a2

      # 7Ô∏è‚É£ Create Kubernetes secret for GCP service account
      - name: Create GCP service account secret
        run: |
          echo "${{ secrets.GCP_SA_KEY }}" > sa-key.json
          kubectl create secret generic gcp-sa-key --from-file=sa-key.json=sa-key.json --dry-run=client -o yaml | kubectl apply -f -

      # 8Ô∏è‚É£ Deploy manifests to GKE
      - name: Deploy to GKE
        run: |
          sed -i "s|image: .*|image: $IMAGE|" deployment.yaml
          kubectl apply -f deployment.yaml
          kubectl apply -f service.yaml
          kubectl apply -f hpa.yaml

      # 9Ô∏è‚É£ Wait for external IP of service
      - name: Wait for external IP
        id: get_ip
        run: |
          echo "Waiting for external IP..."
          SERVICE_IP=""
          while [ -z "$SERVICE_IP" ]; do
            sleep 5
            SERVICE_IP=$(kubectl get svc demo-log-ml-service -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
          done
          echo "External IP: $SERVICE_IP"
          echo "SERVICE_IP=$SERVICE_IP" >> $GITHUB_ENV

      # üîü Run wrk load test (optional, install wrk first in your runner)
      - name: Install wrk
        run: |
          sudo apt-get update
          sudo apt-get install -y wrk

      - name: Run wrk load test
        run: |
          echo "Running wrk against http://${{ env.SERVICE_IP }}"
          wrk -t2 -c10 -d30s -s post.lua http://${{ env.SERVICE_IP }}:8200/predict > wrk_output.txt
      
      # 1Ô∏è‚É£1Ô∏è‚É£ Upload wrk output as artifact
      - name: Upload wrk output
        uses: actions/upload-artifact@v4
        with:
          name: wrk-load-test
          path: wrk_output.txt
